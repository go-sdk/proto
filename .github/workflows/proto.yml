name: Proto

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  generate:
    name: Generate
    runs-on: ubuntu-latest
    steps:
      - name: Release
        id: release
        uses: GoogleCloudPlatform/release-please-action@v3
        with:
          release-type: go
          bump-minor-pre-major: true
          bump-patch-for-minor-pre-major: true
          pull-request-title-pattern: "release: ${version}"
      - name: Checkout
        uses: actions/checkout@v3
      - name: Checkout PB
        uses: actions/checkout@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          repository: go-sdk/pb
          path: pb
          token: ${{ secrets.PAGE_PAT }}
      - name: Backup
        if: ${{ github.event_name != 'pull_request' }}
        run: mv pb/.git git_bak
      - name: Cache
        uses: actions/cache@v3.0.11
        with:
          path: |
            ~/.cache/buf
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-cache-${{ hashFiles('**/buf.lock') }}
      - name: Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Buf
        uses: bufbuild/buf-setup-action@main
        with:
          github_token: ${{ github.token }}
      - name: Buf Generate
        run: make pb
      - name: Restore
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          cd pb
          mv ../git_bak .git
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: Version
        if: ${{ steps.release.outputs.release_created }}
        run: |
          version=v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
          echo "PB_VERSION=$version" >> $GITHUB_ENV
          sed -i "s|dev|$version|g" pb/version.go
      - name: Commit
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          cd pb
          git add -A
          git commit -m "proto: ${{ github.event.head_commit.message }}"
          git push -u origin master
      - name: Create Tag
        if: ${{ steps.release.outputs.release_created }}
        run: |
          cd pb
          echo "new tag ${{ env.PB_VERSION }}"
          git tag "${{ env.PB_VERSION }}"
          git push origin "${{ env.PB_VERSION }}"
      - name: Create Release
        if: ${{ steps.release.outputs.release_created }}
        run: |
          curl -s -o /dev/null -X POST -H 'Authorization: token ${{ secrets.PAGE_PAT }}' -d '{"tag_name":"${{ env.PB_VERSION }}","name":"${{ env.PB_VERSION }}"}' -w "%{http_code}" https://api.github.com/repos/go-sdk/pb/releases
