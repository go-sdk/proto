syntax = "proto3";

package admin;

option go_package = "github.com/go-sdk/pb/admin";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

import "common/common.proto";

service UserService {
  // 用户模块
  rpc Health(google.protobuf.Empty) returns (google.protobuf.Struct) {
    option (google.api.http) = {
      get: "/user/_health"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {}
    };
  };

  // 创建用户
  rpc CreateUser(User) returns (common.Id) {
    option (google.api.http) = {
      post: "/user/create"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: ""
    };
  };
}

// 用户
message User {
  string id = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  string username = 2 [(validate.rules).string = { min_len: 6, max_len: 16 }];
  string password = 3 [(validate.rules).string = { min_len: 8, max_len: 32 }];

  common.Meta meta = 8;
}
